import Product from '@/components/home/Products/Product';
import productStyles from '@/styles/products/Products.module.css';
import styles from '@/styles/category/Category.module.css';
import { Product as ProductType } from '@/shared/types/products';
import { GetStaticPaths, GetStaticProps } from 'next';
import Head from 'next/head';
import getProducts from '@/shared/functions/getProducts';
import { useState } from 'react';
import FILTERS from '@/shared/variables/filters';
import sortProducts from '@/shared/functions/sortProducts';
import Filter from '@/components/category/Filter';

type Props = {
  categoryProducts: ProductType[];
};

export default function Category({ categoryProducts }: Props) {
  const category = categoryProducts[0].product_type;
  const title = `Gioielleria - ${category}`;

  const [activeFilter, setActiveFilter] = useState(FILTERS.default);
  const [filteredProducts, setFilteredProducts] = useState(categoryProducts);

  const handleFilter = (filter: string) => {
    if (activeFilter === filter) return;
    setActiveFilter(filter);
    setFilteredProducts(sortProducts(categoryProducts, filter));
  };

  return (
    <>
      <Head>
        <title>{title}</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='responsive_width' style={{ paddingBlock: '20px' }}>
        <h2>{category}</h2>
        <Filter activeFilter={activeFilter} handleFilter={handleFilter} />
        <section className={productStyles.products}>
          {filteredProducts.map((product) => (
            <Product key={product.id} product={product} />
          ))}
        </section>
      </main>
    </>
  );
}

export const getStaticPaths: GetStaticPaths = async () => {
  const products = await getProducts();
  const uniqueTypes = [...new Set(products.map((product) => product.product_type.toLowerCase()))];

  const paths = uniqueTypes.map((type) => {
    return {
      params: { name: type },
    };
  });

  return {
    paths,
    fallback: 'blocking',
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const products = await getProducts();

  const categoryProducts = products.filter((product) => product.product_type.toLowerCase() === params?.name);

  return {
    props: {
      categoryProducts,
    },
  };
};
